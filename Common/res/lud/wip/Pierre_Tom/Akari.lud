(define "Test"
        (forAll Cell 
                (at Least 
                    (sites Direction 
                        from:(from) 
                        Orthogonal 
                        included:true 
                        stop:(or (is In (sites "Walls")) (is In (sites "Hints"))) 
                    stopIncluded:false) 
                    1
                )
            )
)


//------------------------------------------

(game "Akari" 
    (players 1) 
    (equipment { 
        (board (square <Challenge:size>) (values Cell (range 1)))
        (hints { <Challenge:hints> })
        <Challenge:regions>
        (piece "light" P1)
        
    }) 
    (rules
        (play (satisfy {
//                (forAll Hint 
//                    (is Count 
//                        (sites Around (from) Orthogonal includeSelf:False) 
//                        (hint)
//                    )
//                )
                ("Test")
                (at Most "Line" 1)
                (is Sum "Walls" 0)
            })
        )
        (end (if (is Solved) (result P1 Win)))
    )
)

(option "Challenge" <Challenge> args:{<size> <hints> <regions>}
    {
    (item "Nikoli" 
        <7>
        <
        (hint {0} 1)
        (hint {4} 1)
        (hint {12} 1)
        (hint {31} 2)
        (hint {36} 4)
        (hint {39} 1)
        
        >
        <
        //Lines
        (regions "Line" {1 2 3})
        (regions "Line" {5 6})
        (regions "Line" {10 11})
        (regions "Line" {14 15 16})
        (regions "Line" {18 19 20})
        (regions "Line" {23 24 25})
        (regions "Line" {28 29 30})
        (regions "Line" {32 33 34})
        (regions "Line" {37 38})
        (regions "Line" {42 43})
        (regions "Line" {45 46 47})
        
        //Columns
        (regions "Line" {14 21 28 35 42})
        (regions "Line" {1 8 15})
        (regions "Line" {16 23 30 37})
        (regions "Line" {3 10})
        (regions "Line" {38 45})
        (regions "Line" {11 18 25 32})
        (regions "Line" {33 40 47})
        (regions "Line" {6 13 20 27 34 41})
        
        (regions "Walls" {7 9 17 22 26 41 44 48})
        
        (regions "Hints" {0 4 12 31 36 39})
        
        >
        ""
    ) 
    (item "1" 
        <7>
        <
        (hint {10} 1)
        (hint {11} 1)
        (hint {20} 1)
        (hint {22} 1)
        (hint {24} 2)
        (hint {27} 1)
        (hint {31} 1)
        (hint {38} 0)
        (hint {47} 1)
        >
        <
        //Lines
        (regions "Line" {1 2 3 4 5 6})
        (regions "Line" {7 8 9})
        (regions "Line" {12 13})
        (regions "Line" {14 15 16 17 18 19})
        (regions "Line" {25 26})
        (regions "Line" {28 29 30})
        (regions "Line" {33 34})
        (regions "Line" {35 36 37})
        (regions "Line" {39 40 41})
        (regions "Line" {42 43 44 45 46})
        
        //Columns
        (regions "Line" {7 14 41 48 35 42})
        (regions "Line" {1 8 15})
        (regions "Line" {29 36 43})
        (regions "Line" {2 9 16})
        (regions "Line" {30 37 42})
        (regions "Line" {18 25})
        (regions "Line" {39 46})
        (regions "Line" {5 12 19 26 33 40})
        (regions "Line" {6 13})
        (regions "Line" {34 41 48})
        
        (regions "Walls" {0 23 32})
        
        (regions "Hints" {10 11 20 22 24 27 31 38 47})
        
        >
        ""
    )
    (item "14x14" 
        <14>
        <
        (hint {15} 0)
        (hint {26} 2)
        (hint {34} 0)
        (hint {42} 2)
        (hint {53} 0)
        (hint {61} 1)
        (hint {69} 3)
        (hint {73} 0)
        (hint {79} 2)
        (hint {82} 4)
        (hint {95} 2)
        (hint {98} 2)
        (hint {100} 0)
        (hint {119} 1)
        (hint {142} 2)
        (hint {145} 2)
        (hint {149} 4)
        (hint {159} 0)
        (hint {164} 4)
        (hint {169} 1)
        (hint {180} 2)
        (hint {185} 1)
        (hint {189} 1)
        >
        <
        //Lines
        (regions "Line" {0 1 2 3})
        (regions "Line" {5})
        (regions "Line" {7 8 9})
        (regions "Line" {11 12 13})
        (regions "Line" {16 17 18})
        (regions "Line" {20 21 22 23 24 25})
        (regions "Line" {28 29 30})
        (regions "Line" {32 33})
        (regions "Line" {37 38 39 40 41})
        (regions "Line" {43 44 45})
        (regions "Line" {47 48 49})
        (regions "Line" {51 52})
        (regions "Line" {54 55})
        (regions "Line" {56 57 58 59 60})
        (regions "Line" {62 63 64 65})
        (regions "Line" {67 68})
        (regions "Line" {70 71})
        (regions "Line" {74 75})
        (regions "Line" {77 78})
        (regions "Line" {80 81})
        (regions "Line" {83})
        (regions "Line" {84 85 86 87 88 89 90 91})
        (regions "Line" {93 94})
        (regions "Line" {101 102})
        (regions "Line" {104 105 106 107 108 109 110 111})
        (regions "Line" {112})
        (regions "Line" {114 115})
        (regions "Line" {117 118})
        (regions "Line" {120 121})
        (regions "Line" {124 125})
        (regions "Line" {127 128})
        (regions "Line" {130 131 132 133})
        (regions "Line" {135 136 137 138 139})
        (regions "Line" {140 141})
        (regions "Line" {143 144})
        (regions "Line" {146 147 148})
        (regions "Line" {150 151 152})
        (regions "Line" {154 155 156 157 158})
        (regions "Line" {162 163})
        (regions "Line" {165 166 167})
        (regions "Line" {170 171 172 173 174 175})
        (regions "Line" {177 178 179})
        (regions "Line" {182 183 184})
        (regions "Line" {186 187 188})
        (regions "Line" {190})
        (regions "Line" {192 193 194 195})
        
        //Columns
        (regions "Line" {0 14 18})
        (regions "Line" {56 70 84})
        (regions "Line" {140 154 168 182})
        (regions "Line" {29 43 57 71 85 99})
        (regions "Line" {127 141 155})
        (regions "Line" {2 16 30 44 58})
        (regions "Line" {114 128})
        (regions "Line" {156 170 184})
        (regions "Line" {3 17})
        (regions "Line" {45 59})
        (regions "Line" {87 101 115})
        (regions "Line" {143 157 171})
        (regions "Line" {18 32})
        (regions "Line" {60 74 88 102})
        (regions "Line" {130 144 158 172 186})
        (regions "Line" {33 47})
        (regions "Line" {75 89})
        (regions "Line" {117 131})
        (regions "Line" {173 187})
        (regions "Line" {48 62})
        (regions "Line" {90 104 118 132 146 160 174 188})
        (regions "Line" {7 21 35 49 63 77 91 105})
        (regions "Line" {133 147})
        (regions "Line" {8 22})
        (regions "Line" {64 78})
        (regions "Line" {106 120})
        (regions "Line" {148 162})
        (regions "Line" {9 23 37 51 65})
        (regions "Line" {93 107 121 135})
        (regions "Line" {163 177})
        (regions "Line" {24 38 52})
        (regions "Line" {80 94 108})
        (regions "Line" {136 150})
        (regions "Line" {178 192})
        (regions "Line" {11 25 39})
        (regions "Line" {67 81})
        (regions "Line" {137 151 165 179 193})
        (regions "Line" {40 54 68})
        (regions "Line" {96 110 124 138 152 166})
        (regions "Line" {13 27 41 55})
        (regions "Line" {111 125 139})
        (regions "Line" {167 181 195})
        
        (regions "Walls" {4 6 10 19 31 36 46 50 66 72 76 92 97 103 113 116 122 123 126 129 134 153 161 176 191})
        
        (regions "Hints" {15 26 34 42 53 61 69 73 79 82 95 98 100 119 142 145 149 159 164 169 180 185 189})
        
        >
        ""
    )
    
})
(metadata    
	(info
	    {
	        (description "Akari is a mathematical logic game in the form of a grid of black squares and white squares. The aim of the game is to light up each white square by placing light bulbs (represented by circles) in the right places.")
	        (rules "Place light bulbs (circles) according to the following rules. Light bulbs may be placed in any of the white squares, the number in the square shows how many light bulbs are next to it, vertically and horizontally. Each light bulb illuminates from bulb to black square or outer frame in its row and column. Every white square must be illuminated and a light bulb can not illuminate another light bulb.")
	        (source "<a href=\"https://www.nikoli.co.jp/en/puzzles/akari\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Nikoli</a>")
	        (version "1.3.12")
	        (classification "puzzle/deduction")
	        (credit "Pierre Accou & Tom Doumont")
	        (date "2001")
	    }
	)
    (graphics {
        (piece Rename piece:"1" "Light")
        (region Colour "Hints" (colour 92 109 115))
        (region Colour "Walls" (colour 92 109 115))
        //(region Colour "Hints" fillColour:(colour White))
    })
)
